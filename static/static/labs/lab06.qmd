---
title: "Lab 06"
author: "STA 101"
subtitle: "Due Thursday October 27 at 11:59pm"
format: html
css: "labs2.css"
---

By the end of this lab you will

- practice manipulating Normal random variables
- compute and interpret bootstrap confidence intervals


## Getting started

\ 1. Download the lab template by pasting the code below in your **console**:

```
download.file("https://sta101-fa22.netlify.app/static/labs/lab06_template.qmd",
              destfile = "lab06.qmd")
```

\ 2. Under the "Files" tab on the right hand side, click on `lab06.qmd` to open the lab template.


\ 3. Complete the exercises below using the space provided.

## Warm up

Be sure to update the YAML at the top of the document to include your name and the date.

### Packages

```{r load-packages, warning=F, message=F}
library(tidyverse)
library(tidymodels)
```

### Data

Load the data:

```{r load-data, warning=F, message=F}
snapshot = read_csv("~/Desktop/snapshot.csv")
lemurs = read_csv("~/Desktop/lemur_subset.csv")
```


- The `snapshot` data set used/introduced in exercise 2. 

- The `lemurs` data set is used in questions 3 through 6. The lemurs data set is a subset of data from the Duke lemur center. More info about the data set and a codebook can be found [here](https://github.com/rfordatascience/tidytuesday/blob/master/data/2021/2021-08-24/readme.md).


:::{.callout-important}
Render as you work! Render at least before and after each exercise to avoid last minute rendering issues.
:::

## Exercises

1. Let $Z \sim N(0, 1)$, $X \sim N(0,3)$, $Y \sim N(1, 3)$. Compute the following probabilities:

- $P(Z < -1.2)$
- $P(X < -3.6)$
- $P(Y < -2.6)$

Do the results surprise you? Why or why not?

2. You take pictures of a tennis ball your friend drops from the top of Duke Chapel. Your camera takes 25 pictures in 3.5 seconds. Looking back through the images you approximate the height of the ball at each time point. This data is summarized in the `snapshot` data frame where `time` records the time since the ball was launched and `height` records height of the ball from the ground. You plot the data:

```{r echo=F, message=F,eval=F}
set.seed(1019)
g <- 9.8 ##meters per second
n <- 25
tt <- seq(0,3.5,len=n) ##time in secs, t is a base function
f <- 64  - 0.5*g*tt^2
y <-  f + rnorm(n,sd=1)

trajectory = data.frame(time = tt, 
                        height = y)

# trajectory %>%
#   ggplot(aes(x = time, y = height)) +
#   geom_point()

write_csv(trajectory, "~/Desktop/snapshot.csv")
```

```{r, message = F, echo = F}
snapshot %>%
  ggplot(aes(x = time, y = height)) +
  geom_point() +
  labs(x = "Time (seconds)", y = "Height (m)",
       title = "Height of a ball dropped from a cliff") +
  theme_bw()
```

You notice distance seems to be a parabolic function of time and hypothesize:

$$
y = \beta_0 + \beta_1 t + \beta_2 t^2 + \epsilon
$$

where $y$ is the distance of the ball, $t$ is the time since the ball was dropped and $\epsilon$ is some measurement error.

- If you assume $\epsilon \sim N(0, 1)$, what is the distribution of $y$?

- Fit the linear model and write down the fitted model equation. 

- The physical formula to compute the height of a falling object is:

$$
y = h_0 + v_0 t -  \frac{9.8}{2} t^2
$$

where $h_0$ is the height the ball starts at, $v_0$ is the initial velocity of the ball and $9.8$ m/s^2 is the acceleration due to Earth's gravity. Given this knowledge, what are your estimates for the height of Duke chapel (note this estimate is in meters)?  What is your estimate of the initial velocity? What is your estimate of the acceleration of gravity? How close is it to 9.8?

- Assume another ball is dropped with exactly 0 velocity from the top of a building with a height of 100 meters What is the probability the ball has a height greater than 80 meters 2 seconds after being dropped? (You can use 9.8 m/s^2 for gravity here)

#### Lemur questions

3. What is the median weight of ring-tailed lemurs? What is the median weight of mongoose lemurs? Report a 95% bootstrap confidence interval together with your point estimates. Use `set.seed(123)` and `reps = 10000` to create your bootstrap confidence interval.

4. Your friend has never taken a statistics course. Describe to your friend the process of "bootstrap sampling" in the previous exercise in your own words. You may find it helpful to describe it as drawing pieces of paper from a box like we did in class. Hint: what would you write on the slips of paper? How many pieces of paper would be in the box? How many boxes would you need for the above exercise?

5. Do female lemurs differ in weight from male lemurs? Report the difference in mean weights between groups. Next, construct a bootstrap distribution for **the difference in means between groups**. To do this, use the code below as a template:

```{r, eval = F}
# data %>%
#   specify(response = ___, explanatory = sex) %>%
#   generate(reps = __, type = "bootstrap") %>%
#   calculate(stat = "diff in means", order = c("F", "M"))

boot_dist = lemurs %>%
  specify(response = weight_g, explanatory = sex) %>%
  generate(reps = 10000, type = "bootstrap") %>%
  calculate(stat = "diff in means", order = c("F", "M"))
```


- Interpret the confidence interval within context.

6. Create a new column that tells you whether or not a lemur was born in the first or second half of the year (January through June vs July through December). Create a meaningful plot to illustrate the weights of each group of lemurs. Use `theme_bw()` to replace the default gray plot background.

7. Is there more variability in weight for lemurs born in the first half or second half of the year? Report the estimated standard deviation of each group. Report a 90% bootstrap confidence interval of s.d. for each group. Visualize the bootstrap distribution of standard deviation. Interpret the confidence interval in context.

## Formatting

**Reminder**: For all assignments in this course there is a "formatting" component to the grade. To receive full points for "formatting", you must:

\ 1. Have your name at the top of the rendered document

\ 2. Pipes `%>%` and ggplot layers `+` should be followed by a newline (see formatting above)

\ 3. Your code should be under the 80 character code limit. (You shouldn't have to scroll to see all your code on the rendered document).

\ 4. All exercises and corresponding pages should be linked on gradescope.

These necessary "tidyverse" style choices are good general practice and will help make your code more legible. For a more extensive list of recommended guidelines, [click here](https://style.tidyverse.org/).

## Submitting to gradescope

Once you are fully satisfied with your lab, render to .pdf to create a .pdf document. You may notice that the formatting/theme of the report has changed – this is expected. Remember – you must turn in a .pdf file to the Gradescope page before the submission deadline for credit. To submit your assignment: 

- Go to [http://www.gradescope.com](http://www.gradescope.com) and click Log in in the top right corner. - Click `School Credentials`, `Duke NetID` and log in using your NetID credentials. 

- Click on your STA 101 course. 

- Click on the assignment, and you'll be prompted to submit it. 

- Mark the pages associated with each exercise. All of the papers of your lab should be associated with at least one question (i.e., should be “checked”). Select the first page of your .pdf submission to be associated with the "Formatting" section.

## Grading

Total: 50 pts.

    Exercise 1: 5pts

    Exercise 2: 3pts

    Exercise 3: 5pts

    Exercise 4: 7pts

    Exercise 5: 4pts
    
    Exercise 6: 8pts
    
    Exercise 7: 6pts
    
    Workflow and formatting:  4pts
    